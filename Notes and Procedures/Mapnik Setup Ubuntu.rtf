{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww30040\viewh14700\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs48 \cf0 Mapnik install on Ubuntu 10.04:\

\f1\fs24 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs36 \cf0 00. PRE-PRE-INSTALL\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs24 \cf0 1. Login to Rackspace Admin: https://manage.rackspacecloud.com/pages/Login.jsp\
2. Rezize server to 80GB HD and 2GB RAM (or bigger if necessary)\
3. When done reduce to smallest size possible\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs36 \cf0 0. PRE-INSTALL
\fs24 \
\
(as root)\
apt-get update\
apt-get install g++ cpp \\\
\pard\pardeftab720\ql\qnatural
\cf0 python-dev libxml2 libxml2-dev \\\
libfreetype6 libfreetype6-dev \\\
libjpeg62 libjpeg62-dev \\\
libltdl7 libltdl-dev \\\
libpng12-0 libpng12-dev \\\
libgeotiff-dev libtiff4 libtiff4-dev libtiffxx0c2 \\\
libcairo2 libcairo2-dev python-cairo python-cairo-dev \\\
libcairomm-1.0-1 libcairomm-1.0-dev \\\
ttf-unifont ttf-dejavu ttf-dejavu-core ttf-dejavu-extra \\\
python-nose libcurl4-gnutls-dev\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 \
apt-get update\
\pard\pardeftab720\ql\qnatural
\cf0 apt-get install python-lxml\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 apt-get install unzip\
\pard\pardeftab720\ql\qnatural
\cf0 apt-get install python-software-properties\
apt-get install subversion build-essential libxml2-dev libgeos-dev libpq-dev libbz2-dev proj libtool automake\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs36 \cf0 1. INSTALL PostgreSQL & PostGIS
\fs24 \
\
(as root)\
\pard\pardeftab720\ql\qnatural
\cf0 apt-get update\
add-apt-repository ppa:ubuntugis/ubuntugis-unstable\
add-apt-repository ppa:pitti/postgresql\
add-apt-repository ppa:pi-deb/gis\
\
apt-get update\
apt-get install postgresql-9.0-postgis\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 cp /root/.bashrc /var/lib/postgresql/.bashrc\
chown postgres:postgres /var/lib/postgresql/.bashrc\
\pard\pardeftab720\ql\qnatural
\cf0 \
su postgres\
cd ~\
/usr/lib/postgresql/9.0/bin/createdb template_postgis\
psql -q -d template_postgis -f /usr/share/postgresql/9.0/contrib/postgis-1.5/postgis.sql\
psql -q -d template_postgis -f /usr/share/postgresql/9.0/contrib/postgis-1.5/spatial_ref_sys.sql\
psql -q -d template_postgis -f /usr/share/postgresql/9.0/contrib/postgis_comments.sql\
cat <<EOS | psql -d template_postgis\
UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template_postgis';\
REVOKE ALL ON SCHEMA public FROM public;\
GRANT USAGE ON SCHEMA public TO public;\
GRANT ALL ON SCHEMA public TO postgres;\
GRANT SELECT, UPDATE, INSERT, DELETE\
  ON TABLE public.geometry_columns TO PUBLIC;\
GRANT SELECT, UPDATE, INSERT, DELETE\
  ON TABLE public.spatial_ref_sys TO PUBLIC;\
EOS\
\
\
TEST WITH:\
/usr/lib/postgresql/9.0/bin/createdb --template template_postgis map_gis\
psql -d map_gis -c "select postgis_lib_version();"\
\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs36 \cf0 2. INSTALL pgAdmin3
\fs32  
\fs24 (download binary client on Mac)
\fs32 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs24 \cf0 \
(as root)\
\pard\pardeftab720\ql\qnatural
\cf0 nano /etc/postgresql/9.0/main/postgresql.conf\
listen_addresses = '*'		# what IP address(es) to listen on;\
nano /etc/postgresql/9.0/main/pg_hba.conf\
host  all	  all  0.0.0.0/0  password\
/etc/init.d/postgresql restart\
\
su postgres \
cd ~\
psql postgres\
\\password postgres\
\\q\
\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs36 \cf0 3. INSTALL osm2pgsql
\fs32  
\fs24 (from package)\
\pard\pardeftab720\ql\qnatural
\cf0 \
(as root)\
svn export http://svn.openstreetmap.org/applications/utils/export/osm2pgsql\
cd osm2pgsql\
./autogen.sh\
./configure\
make\
make install\
\
NOTE - the above make install puts the files:\
/usr/local/share/osm2pgsql/900913.sql\
/usr/local/share/osm2pgsql/default.style\
\
CREATE a mapnik2 COMPATIBLE STYLE FILE (used by osm2pgsql):\
su postgres\
cd ~\
cp /usr/local/share/osm2pgsql/default.style /var/lib/postgresql/osm2pgsql_pt.style\
cat <<eof >> /var/lib/postgresql/osm2pgsql_pt.style\
# extensions for openptmap:\
node,way line text linear\
node,way ref_name text linear\
node,way uic_ref text linear\
node,way public_transport text linear\
node,way train text linear\
node,way wheelchair text linear\
node,way website text linear\
eof\
\
\
GET SOME OSM DATA:\
wget http://www.openstreetmap.org/api/0.6/map?bbox=-1.261900,54.646600,-1.172068,54.729680 -O townguide.osm\
\
INSERT OSM DATA IN POSTGRES DATABASE:\
osm2pgsql --create --slim --cache 800 --merc --database map_gis --username postgres --host localhost --port 5432 --password --style /var/lib/postgresql/osm2pgsql_pt.style townguide.osm\
\
TEST WITH:\
psql -d map_gis\
select osm_id,name,railway from planet_osm_point where railway='station';\
\\q\
\
\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs36 \cf0 4. INSTALL Mapnik2
\fs32  
\fs24 \
\pard\pardeftab720\ql\qnatural
\cf0 \
(as root)\
add-apt-repository ppa:mapnik/nightly-trunk\
apt-get update\
apt-get install python-mapnik2\
\
TEST WITH:\
python\
>>> import mapnik2\
^D\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs36 \cf0 5. INITILIZE Mapnik2
\fs24 \
\pard\pardeftab720\ql\qnatural
\cf0 \
su postgres\
cd ~\
mkdir mapdata\
svn co http://svn.openstreetmap.org/applications/rendering/mapnik mapnik_osm\
cp -rf mapnik_osm/symbols mapdata/symbols\
mapnik_osm/get-coastlines.sh\
mv world_boundaries mapdata/world_boundaries\
rm world_boundaries-spherical.tgz 110m-admin-0-boundary-lines.zip shoreline_300.tar.bz2 processed_p.tar.bz2 10m-populated-places.zip\
ln -s /var/lib/postgresql/mapdata/world_boundaries/ne_10m_populated_places.prj /var/lib/postgresql/mapdata/world_boundaries/10m_populated_places.prj\
ln -s /var/lib/postgresql/mapdata/world_boundaries/ne_10m_populated_places.shx /var/lib/postgresql/mapdata/world_boundaries/10m_populated_places.shx\
ln -s /var/lib/postgresql/mapdata/world_boundaries/ne_10m_populated_places.shp /var/lib/postgresql/mapdata/world_boundaries/10m_populated_places.shp\
ln -s /var/lib/postgresql/mapdata/world_boundaries/ne_10m_populated_places.dbf /var/lib/postgresql/mapdata/world_boundaries/10m_populated_places.dbf\
\
CREATE/INITILIZE STYLE FILE (aka map file)\
cd mapnik_osm\
wget  http://svn.mapnik.org/trunk/utils/upgrade_map_xml/upgrade_map_xml.py\
chmod 755 upgrade_map_xml.py\
python ./upgrade_map_xml.py osm.xml new.xml\
cp osm.xml old.xml\
cp new.xml osm.xml\
\
TEST WITH:\
./generate_image.py\
\
\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs36 \cf0 6. POST-INSTALL
\fs24 \
\pard\pardeftab720\ql\qnatural
\cf0 \
(as root)\
GET SOME RELEVENT DATA:\
wget http://downloads.cloudmade.com/americas/northern_america/united_states/washington/washington.osm.bz2\
wget http://downloads.cloudmade.com/americas/northern_america/united_states/oregon/oregon.osm.bz2\
wget http://downloads.cloudmade.com/americas/northern_america/united_states/california/california.osm.bz2\
\
\
\
GET OSMOSIS:\
apt-get install openjdk-6-jre\
wget http://bretth.dev.openstreetmap.org/osmosis-build/osmosis-latest.tgz\
tar -xvzf osmosis-latest.tgz\
./osmosis-0.39/bin/osmosis --rx ../../washington.osm.bz2 --rx ../../oregon.osm.bz2 --rx ../../california.osm.bz2 --merge --merge --wx WA_OR_CA.osm\
chown postgres:postgres WA_OR.osm\
mv WA_OR.osm /var/lib/postgres\
\
\
ADD NEW DATA:\
su postgres\
cd ~\
osm2pgsql --create --slim --cache 800 --merc --database map_gis --username postgres --host localhost --port 5432 --password --style /var/lib/postgresql/osm2pgsql_pt.style  WA_OR_CA.osm\
\
MODIFY BBOX:\
nano /var/lib/postgresql/mapnik_osm/generate_image.py\
bounds = (-122.526479773, 47.6317229572, -122.514465427, 47.6398154428) # smaller\
bounds = (-122.547290335, 47.6177056162, -122.493654865, 47.6538327838) # bigger\
\
TEST WITH:\
./generate_image.py\
\
\
\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs36 \cf0 7. Install Nik2img
\fs24 \
\pard\pardeftab720\ql\qnatural
\cf0 \
(as root)\
svn co http://mapnik-utils.googlecode.com/svn/trunk/nik2img/\
cd nik2img\
python setup.py install\
\
TEST WITH:\
su postgres\
\
nik2img.py mapnik.xml 64.png  --format png --srs 900913 --bbox -122.547290335 47.6177056162 -122.493654865 47.6538327838 --dimensions 1200 1200 --scale-factor 1 -v --no-open\
nik2img.py mapnik.xml 64.png  --format png --srs 900913 --bbox -122.547290335 47.6177056162 -122.493654865 47.6538327838 --dimensions 2400 2400 --scale-factor 2.5 -v --no-open\
\
\
\
\
\
\
\
\
\
\
\
\
/** SNIPPETS **/\
\
\
Good resource:\
http://wiki.openstreetmap.org/wiki/Openptmap/Installation\
\
\
Good resource:\
http://code.google.com/p/townguide/wiki/InstallationInstructions\
\
\
\
o5m format:\
http://wiki.openstreetmap.org/wiki/.o5m\
\
\
\
THIS MAKES A FILE OVER 40GB: \
//cat united_states.osm.bz2.part.00 united_states.osm.bz2.part.01 | bzip2 -dc > united_states.osm.bz2\
\
\
NOTE - the above make install puts the files:\
/usr/local/share/osm2pgsql/900913.sql\
/usr/local/share/osm2pgsql/default.style\
\
 THIS IS DONE BY THE MAKE INSTALL\
//psql -d map_gis -f /usr/local/share/osm2pgsql/900913.sql \
\
\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs36 \cf0 INSTALL Mapnik2 DATA\
old?
\fs24 \
\pard\pardeftab720\ql\qnatural
\cf0 python ./generate_xml.py osm.xml new.xml --dbname='map_gis' --host='localhost' --user='postgres' --password='Cochlear91' --symbols='/var/lib/postgresql/mapdata/symbols' --world_boundaries='/var/lib/postgresql/mapdata/world_boundaries' --port='5432' --epsg='900913'\
\
\
\
//svn co http://svn.mapnik.org/tags/release-0.7.1/ mapnik_src\
svn co http://svn.mapnik.org/trunk mapnik2\
cd mapnik2\
//python scons/scons.py configure INPUT_PLUGINS=all OPTIMIZATION=3 SYSTEM_FONTS=/usr/share/fonts/\
\
<< HERE Boost version 1.41 or greater is required > python-mapnik2 installs everything\
\
python scons/scons.py BOOST_INCLUDES='/root/boost_1_47_0/stage/lib' BOOST_LIBS='/root/boost_1_47_0/stage/lib' INPUT_PLUGINS=all OPTIMIZATION=3\
\
python scons/scons.py configure\
python scons/scons.py\
python scons/scons.py install\
\
\
\
\
wget http://tile.openstreetmap.org/world_boundaries-spherical.tgz\
wget http://tile.openstreetmap.org/processed_p.tar.bz2\
wget http://tile.openstreetmap.org/shoreline_300.tar.bz2\
\
tar -xvzf world_boundaries-spherical.tgz\
mv world_boundaries mapdata\
\
tar -xvjf processed_p.tar.bz2\
mv processed_p.dbf processed_p.index processed_p.shp processed_p.shx mapdata/world_boundaries\
\
tar -xvjf shoreline_300.tar.bz2\
mv shoreline_300.dbf shoreline_300.index shoreline_300.shp shoreline_300.shx mapdata/world_boundaries\
\
\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 /** MAYBE THIS INSTEAD OF 9.0?\
\pard\pardeftab720\ql\qnatural
\cf0 \
sudo apt-get install libsigc++-dev libsigc++0c2 libsigx-2.0-2 libsigx-2.0-dev\
sudo apt-get install libgdal1-dev python-gdal \\\
postgresql-8.4 postgresql-server-dev-8.4 postgresql-contrib-8.4 \\\
postgresql-8.4-postgis libsqlite3-dev\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 \
**/\
\pard\pardeftab720\ql\qnatural
\cf0 \
\
\
Try this later for optimization after things work: 
\fs36 INSTALL osm2pgsql
\fs32  
\fs24 (from package)\
cd /var/lib/postgresql\
wget -O - http://m.m.i24.cc/osmconvert.c |cc -x c - -lz -o osmconvert\
wget -O - http://m.m.i24.cc/osmfilter.c |cc -x c - -o osmfilter\
./osmfilter townguide.osm --keep="amenity=bus_station highway=bus_stop =platform public_transport=platform railway=station =stop =tram_stop =platform =rail route=rail =train =light_rail =subway =tram route=bus =trolleybus =ferry =railway =funicular line=rail =light_rail =subway =tram =bus =trolleybus =ferry =railway type=public_transport" --drop="railway=platform" >gis.osm\
\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 /** IF THERE'S AN ERROR LATER CHECK THIS 
\fs36 INSTALL PostgreSQL & PostGIS
\fs24 \
apt-get install g++ cpp \\\
\pard\pardeftab720\ql\qnatural
\cf0 python-dev libxml2 libxml2-dev \\\
libfreetype6 libfreetype6-dev \\\
libjpeg62 libjpeg62-dev \\\
libltdl7 libltdl-dev \\\
libpng12-0 libpng12-dev \\\
libgeotiff-dev libtiff4 libtiff4-dev libtiffxx0c2 \\\
libcairo2 libcairo2-dev python-cairo python-cairo-dev \\\
libcairomm-1.0-1 libcairomm-1.0-dev \\\
ttf-unifont ttf-dejavu ttf-dejavu-core ttf-dejavu-extra \\\
subversion build-essential python-nose libcurl4-gnutls-dev\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 apt-get update\
\pard\pardeftab720\ql\qnatural
\cf0 apt-get install python-software-properties\
**/\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 apt-get install \
\pard\pardeftab720\ql\qnatural
\cf0 \
\
\
\
THIS MAY NOT BE NECESSARY WITH THIS VERSION 
\fs36 INSTALL osm2pgsql
\fs24 :\
su postgres\
cd ~\
psql -d map_gis -f /usr/local/share/osm2pgsql/900913.sql\
>psql:/usr/local/share/osm2pgsql/900913.sql:1: ERROR:  duplicate key value violates unique constraint "spatial_ref_sys_pkey"\
>DETAIL:  Key (srid)=(900913) already exists.\
\
NO\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 add-apt-repository ppa:boost-latest/ppa\
apt-get update\
apt-get install libboost\
\
wget http://sourceforge.net/projects/boost/files/boost/1.47.0/boost_1_47_0.tar.gz\
\pard\pardeftab720\ql\qnatural
\cf0 tar -xvzf boost_1_47_0.tar.gz\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 cd boost_1_47_0\
./bootstrap.sh\
./b2\
\pard\pardeftab720\ql\qnatural
\cf0 \
\
NO?\
add-apt-repository ppa:mapnik/nightly-trunk\
apt-get update\
sudo apt-get install python-mapnik2\
\
\
// if we want dbf support which we dont!\
sudo apt-get install protobuf-compiler libprotobuf-dev libprotoc-dev\
svn checkout http://protobuf-c.googlecode.com/svn/trunk/ protobuf-c-read-only\
cd protobuf-c-read-only\
./autogen.sh\
./configure\
make\
make install \
\
//sudo apt-get install osm2pgsql\
//hmm.. this seem to install some old shit and create a new db on port 5433\
\
\
\
\
Suggested packages:?\
  libhdf4-doc libhdf4-alt-dev hdf4-tools ogdi-bin libmyodbc odbc-postgresql tdsodbc unixodbc-bin\
\
\
show information about a package:\
apt-cache show postgresql\
\
\
Compile from source: \
tar xvzf postgis-1.5.3.tar.gz \
cd postgis-1.5.3 \
./configure \
make \
make install \
createlang plpgsql yourtestdatabase \
psql -d yourtestdatabase -f postgis.sql \
psql -d yourtestdatabase -f spatial_ref_sys.sql\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs28 \cf0 \
http://planet.qgis.org/planet/tag/ubuntu/}